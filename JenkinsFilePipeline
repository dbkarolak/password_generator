pipeline {
    agent {
        docker {
            image 'node:18.17.1-alpine3.18'
            args '-u root --memory=512m --cpus=1'
        }
    }

    environment {
        FIREBASE_DEPLOY_TOKEN = credentials('firebase-token')
    }

    stages {
        stage('Building') {
            steps {
                script {
                    // Use a directory within the workspace for npm cache
                    sh """
                        mkdir -p ${env.WORKSPACE}/.npm-global
                        npm config set prefix ${env.WORKSPACE}/.npm-global
                        npm config set cache ${env.WORKSPACE}/.npm --global
                        export PATH=${env.WORKSPACE}/.npm-global/bin:\$PATH
                    """
                    // Install firebase-tools without global flag to avoid permission issues
                    sh 'npm install firebase-tools'
                }
            }
        }

        stage('Testing') {
            steps {
                echo 'This is testing'
            }
        }

        stage('Staging') {
            steps {
                sh './node_modules/.bin/firebase deploy -P staging-replica-c4415 --token "$FIREBASE_DEPLOY_TOKEN"'
            }
        }

        stage('Production') {
            steps {
                sh './node_modules/.bin/firebase deploy -P production-replica-bc191 --token "$FIREBASE_DEPLOY_TOKEN"'
            }
        }
    }
}
